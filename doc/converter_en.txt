-------------------------------------------------- ----------------------------

 SCSI Target Emulator RaSCSI for Raspberry Pi

 Copyright (C) 2016-2020 GIMONS
 translated using google translate by akuker
 modified by mmmattera
-------------------------------------------------- ----------------------------

□ Requirements for board
  SCSI uses 5V while the RaSCSI uses 3.3V. The voltages are converted using 220Ω and 
  330Ω voltage dividers and a 74LS641 an open collector, octal bus transceiver used to convert 
  between voltage levels and to prevent an overcurrent situation. These chips allow two-way 
  asynchonous communication.
  
  (SCSI) Initiator and/or target side asserts a signal by bringing a line low. RaSCSI has
  options to alter this behavior.
   
□ Circuit board and Hardware info is contained in the hw folder

  ・Target.png
    is the original circuit diagram for using SCSI target mode. It is a basic function
    If you want to emulate HDD or MO, you can make something equivalent to this circuit diagram.
    It uses the fewest GPIO pins.

  ・Fullspec.png
    Is a circuit diagram that can use SCSI target mode and initiator mode.
    All 74LS641-1 direction control is performed from RaSCSI, so it uses 3 extra GPIO pins.
    New pin assignments are to PIN_TAD, PIN_IND, PIN_DTD.

□ Custom pin assignments
  The signal control logic and pin assignment of GPIO are defined in src/raspberrypi/gpiobus.h

□ How to customize
  -This is a message when starting up RaSCSI.
    CONNECT_DESC

  ・Select the signal control mode.
    SIGNAL_CONTROL_MODE

  0: SCSI logical specification
    Conversion board using 74LS641-1 etc. directly connected or published on HP
    Arthurt: 0V
    Negative: Open collector output (disconnect from bus)

  1: Negative logic specification (when using the conversion board for negative logic -> SCSI logic)
    There are no conversion boards with this specification at this time
    logical 1: 0V -> is converted to 0V
    logical 0: 3.3V -> is converted to Open collector output

  2: Positive logic specification (when using the conversion board for positive logic -> SCSI logic)
    RaSCSI Adapter Rev.C @132sync etc.

    logical 1: 3.3V -> is converted to 0V
    logical 0: 0 V -> is converted to Open collector output

  ・Control signal pin assignment
    PIN_ACT: The pin number of the signal that indicates the status that the SCSI command is being processed.
    PIN_ENB: Pin number of the signal that indicates the valid signal from start to finish.
    PIN_TAD: Pin number of the signal that indicates the input/output direction of the target signal (BSY,IO,CD,MSG,REG).
    PIN_IND: Pin number of the signal indicating the input/output direction of the initiator signal (SEL, ATN, RST, ACK).
    PIN_DTD: Pin number of the signal that indicates the input/output direction of the data signal (DT0...DT7,DP).

  ・Control signal output logic
    0V:FALSE Specify with 3.3V:TRUE.

    ACT_ON: PIN_ACT signal logic.
    ENB_ON: Logic of PIN_ENB signal.
    TAD_IN:PIN_TAD This is the logic in the input direction.
    IND_IN:PIN_ENB Logic in the input direction.
    DTD_IN:PIN_ENB Logic in the input direction.

  ・ SCSI signal pin assignment
    PIN_DT0 to PIN_SEL: Each is the pin number of the SCSI signal.

□ How to compile

  ・Executable files (rascsi, rasctl)
    Alter gpiobus.h to match your board
    make clean
    make all CONNECT_TYPE=[STANDARD|FULLSPEC]   %connect_type depends on development environment omit brackets
    sudo make install CONNECT_TYPE=[STANDARD|FULLSPEC]

[EOF]
