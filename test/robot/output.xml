<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2.1 (Python 3.8.2 on linux)" generated="20200830 16:24:08.046" rpa="false">
<suite id="s1" name="Rascsi Service" source="/home/akuker/RASCSI/test/robot/rascsi_service.robot">
<test id="s1-t1" name="RaSCSI Service Can be Started as a Service">
<kw name="Open Connection to Rascsi and Log In" library="rascsi_utils" type="setup">
<kw name="Open Connection" library="SSHLibrary">
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<arguments>
<arg>${Rascsi_Host}</arg>
</arguments>
<status status="PASS" starttime="20200830 16:24:08.163" endtime="20200830 16:24:08.164"></status>
</kw>
<kw name="Login" library="SSHLibrary">
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<arguments>
<arg>${Rascsi_Username}</arg>
<arg>${Rascsi_Password}</arg>
</arguments>
<msg timestamp="20200830 16:24:08.164" level="INFO">Logging into '192.168.68.154:22' as 'pi'.</msg>
<msg timestamp="20200830 16:24:10.733" level="INFO">Read output: Linux rascsi 4.19.118-v7+ #1311 SMP Mon Apr 27 14:21:24 BST 2020 armv7l

The programs included with the Debian GNU/Linux system are free software;
the exact distribution terms for each program are described in the
individual files in /usr/share/doc/*/copyright.

Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent
permitted by applicable law.
Last login: Sun Aug 30 16:22:14 2020 from 192.168.68.156

SSH is enabled and the default password for the 'pi' user has not been changed.
This is a security risk - please login as the 'pi' user and type 'passwd' to set a new password.


Wi-Fi is currently blocked by rfkill.
Use raspi-config to set the country before use.

pi@rascsi:~$</msg>
<status status="PASS" starttime="20200830 16:24:08.164" endtime="20200830 16:24:10.733"></status>
</kw>
<status status="PASS" starttime="20200830 16:24:08.163" endtime="20200830 16:24:10.734"></status>
</kw>
<kw name="When The Rascsi Service is Started" library="linux_services">
<kw name="Convert To Lower Case" library="String">
<doc>Converts string to lower case.</doc>
<arguments>
<arg>${service_name}</arg>
</arguments>
<assign>
<var>${lc_service_name}</var>
</assign>
<msg timestamp="20200830 16:24:10.736" level="INFO">${lc_service_name} = rascsi</msg>
<status status="PASS" starttime="20200830 16:24:10.735" endtime="20200830 16:24:10.736"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>systemctl start ${lc_service_name}</arg>
<arg>sudo=True</arg>
<arg>sudo_password=${Rascsi_Password}</arg>
</arguments>
<msg timestamp="20200830 16:24:10.737" level="INFO">Executing command 'sudo systemctl start rascsi'.</msg>
<msg timestamp="20200830 16:24:11.092" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" starttime="20200830 16:24:10.736" endtime="20200830 16:24:11.092"></status>
</kw>
<status status="PASS" starttime="20200830 16:24:10.734" endtime="20200830 16:24:11.092"></status>
</kw>
<kw name="Then The RaSCSI Service Should be Running" library="linux_services">
<kw name="Convert To Lower Case" library="String">
<doc>Converts string to lower case.</doc>
<arguments>
<arg>${service_name}</arg>
</arguments>
<assign>
<var>${lc_service_name}</var>
</assign>
<msg timestamp="20200830 16:24:11.094" level="INFO">${lc_service_name} = rascsi</msg>
<status status="PASS" starttime="20200830 16:24:11.094" endtime="20200830 16:24:11.094"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>systemctl status ${lc_service_name}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20200830 16:24:11.095" level="INFO">Executing command 'systemctl status rascsi'.</msg>
<msg timestamp="20200830 16:24:11.206" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20200830 16:24:11.206" level="INFO">${output} = ● rascsi.service - RaSCSI service
   Loaded: loaded (/etc/systemd/system/rascsi.service; enabled; vendor preset: enabled)
   Active: active (running) since Sun 2020-08-30 16:22:14 CDT; 1min 56s ago
 M...</msg>
<status status="PASS" starttime="20200830 16:24:11.094" endtime="20200830 16:24:11.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Active: active (running)</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20200830 16:24:11.206" endtime="20200830 16:24:11.207"></status>
</kw>
<status status="PASS" starttime="20200830 16:24:11.093" endtime="20200830 16:24:11.207"></status>
</kw>
<kw name="Close All Connections" library="SSHLibrary" type="teardown">
<doc>Closes all open connections.</doc>
<status status="PASS" starttime="20200830 16:24:11.208" endtime="20200830 16:24:11.208"></status>
</kw>
<doc>Start the Rascsi service and make sure it stays running</doc>
<status status="PASS" starttime="20200830 16:24:08.162" endtime="20200830 16:24:11.209" critical="yes"></status>
</test>
<test id="s1-t2" name="RaSCSI Service Can be Stopped as a Service">
<kw name="Open Connection to Rascsi and Log In" library="rascsi_utils" type="setup">
<kw name="Open Connection" library="SSHLibrary">
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<arguments>
<arg>${Rascsi_Host}</arg>
</arguments>
<status status="PASS" starttime="20200830 16:24:11.211" endtime="20200830 16:24:11.212"></status>
</kw>
<kw name="Login" library="SSHLibrary">
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<arguments>
<arg>${Rascsi_Username}</arg>
<arg>${Rascsi_Password}</arg>
</arguments>
<msg timestamp="20200830 16:24:11.212" level="INFO">Logging into '192.168.68.154:22' as 'pi'.</msg>
<msg timestamp="20200830 16:24:12.823" level="INFO">Read output: Linux rascsi 4.19.118-v7+ #1311 SMP Mon Apr 27 14:21:24 BST 2020 armv7l

The programs included with the Debian GNU/Linux system are free software;
the exact distribution terms for each program are described in the
individual files in /usr/share/doc/*/copyright.

Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent
permitted by applicable law.
Last login: Sun Aug 30 16:24:10 2020 from 192.168.68.156

SSH is enabled and the default password for the 'pi' user has not been changed.
This is a security risk - please login as the 'pi' user and type 'passwd' to set a new password.


Wi-Fi is currently blocked by rfkill.
Use raspi-config to set the country before use.

pi@rascsi:~$</msg>
<status status="PASS" starttime="20200830 16:24:11.212" endtime="20200830 16:24:12.823"></status>
</kw>
<status status="PASS" starttime="20200830 16:24:11.210" endtime="20200830 16:24:12.823"></status>
</kw>
<kw name="When the Rascsi Service is Stopped" library="linux_services">
<kw name="Convert To Lower Case" library="String">
<doc>Converts string to lower case.</doc>
<arguments>
<arg>${service_name}</arg>
</arguments>
<assign>
<var>${lc_service_name}</var>
</assign>
<msg timestamp="20200830 16:24:12.825" level="INFO">${lc_service_name} = rascsi</msg>
<status status="PASS" starttime="20200830 16:24:12.825" endtime="20200830 16:24:12.825"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>systemctl stop ${lc_service_name}</arg>
<arg>sudo=True</arg>
<arg>sudo_password=${Rascsi_Password}</arg>
</arguments>
<msg timestamp="20200830 16:24:12.827" level="INFO">Executing command 'sudo systemctl stop rascsi'.</msg>
<msg timestamp="20200830 16:24:13.121" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" starttime="20200830 16:24:12.826" endtime="20200830 16:24:13.122"></status>
</kw>
<status status="PASS" starttime="20200830 16:24:12.824" endtime="20200830 16:24:13.122"></status>
</kw>
<kw name="Then the RaSCSI Service should be Stopped" library="linux_services">
<kw name="Convert To Lower Case" library="String">
<doc>Converts string to lower case.</doc>
<arguments>
<arg>${service_name}</arg>
</arguments>
<assign>
<var>${lc_service_name}</var>
</assign>
<msg timestamp="20200830 16:24:13.124" level="INFO">${lc_service_name} = rascsi</msg>
<status status="PASS" starttime="20200830 16:24:13.123" endtime="20200830 16:24:13.124"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>systemctl status ${lc_service_name}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20200830 16:24:13.125" level="INFO">Executing command 'systemctl status rascsi'.</msg>
<msg timestamp="20200830 16:24:13.204" level="INFO">Command exited with return code 3.</msg>
<msg timestamp="20200830 16:24:13.204" level="INFO">${output} = ● rascsi.service - RaSCSI service
   Loaded: loaded (/etc/systemd/system/rascsi.service; enabled; vendor preset: enabled)
   Active: failed (Result: exit-code) since Sun 2020-08-30 16:24:13 CDT; 134ms...</msg>
<status status="PASS" starttime="20200830 16:24:13.124" endtime="20200830 16:24:13.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Active: failed</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20200830 16:24:13.205" endtime="20200830 16:24:13.205"></status>
</kw>
<status status="PASS" starttime="20200830 16:24:13.123" endtime="20200830 16:24:13.206"></status>
</kw>
<kw name="Close All Connections" library="SSHLibrary" type="teardown">
<doc>Closes all open connections.</doc>
<status status="PASS" starttime="20200830 16:24:13.206" endtime="20200830 16:24:13.207"></status>
</kw>
<doc>Stop the Rascsi service and make sure it stays stopped</doc>
<status status="PASS" starttime="20200830 16:24:11.209" endtime="20200830 16:24:13.207" critical="yes"></status>
</test>
<test id="s1-t3" name="RaSCSI Service Can be Restarted as a Service">
<kw name="Open Connection to Rascsi and Log In" library="rascsi_utils" type="setup">
<kw name="Open Connection" library="SSHLibrary">
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<arguments>
<arg>${Rascsi_Host}</arg>
</arguments>
<status status="PASS" starttime="20200830 16:24:13.210" endtime="20200830 16:24:13.210"></status>
</kw>
<kw name="Login" library="SSHLibrary">
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<arguments>
<arg>${Rascsi_Username}</arg>
<arg>${Rascsi_Password}</arg>
</arguments>
<msg timestamp="20200830 16:24:13.211" level="INFO">Logging into '192.168.68.154:22' as 'pi'.</msg>
<msg timestamp="20200830 16:24:15.379" level="INFO">Read output: Linux rascsi 4.19.118-v7+ #1311 SMP Mon Apr 27 14:21:24 BST 2020 armv7l

The programs included with the Debian GNU/Linux system are free software;
the exact distribution terms for each program are described in the
individual files in /usr/share/doc/*/copyright.

Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent
permitted by applicable law.
Last login: Sun Aug 30 16:24:12 2020 from 192.168.68.156

SSH is enabled and the default password for the 'pi' user has not been changed.
This is a security risk - please login as the 'pi' user and type 'passwd' to set a new password.


Wi-Fi is currently blocked by rfkill.
Use raspi-config to set the country before use.

pi@rascsi:~$</msg>
<status status="PASS" starttime="20200830 16:24:13.211" endtime="20200830 16:24:15.379"></status>
</kw>
<status status="PASS" starttime="20200830 16:24:13.209" endtime="20200830 16:24:15.380"></status>
</kw>
<kw name="Given The RaSCSI Service is Started" library="linux_services">
<kw name="Convert To Lower Case" library="String">
<doc>Converts string to lower case.</doc>
<arguments>
<arg>${service_name}</arg>
</arguments>
<assign>
<var>${lc_service_name}</var>
</assign>
<msg timestamp="20200830 16:24:15.382" level="INFO">${lc_service_name} = rascsi</msg>
<status status="PASS" starttime="20200830 16:24:15.381" endtime="20200830 16:24:15.382"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>systemctl start ${lc_service_name}</arg>
<arg>sudo=True</arg>
<arg>sudo_password=${Rascsi_Password}</arg>
</arguments>
<msg timestamp="20200830 16:24:15.383" level="INFO">Executing command 'sudo systemctl start rascsi'.</msg>
<msg timestamp="20200830 16:24:15.750" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" starttime="20200830 16:24:15.382" endtime="20200830 16:24:15.750"></status>
</kw>
<status status="PASS" starttime="20200830 16:24:15.380" endtime="20200830 16:24:15.750"></status>
</kw>
<kw name="When The Rascsi Service is Restarted" library="linux_services">
<kw name="Convert To Lower Case" library="String">
<doc>Converts string to lower case.</doc>
<arguments>
<arg>${service_name}</arg>
</arguments>
<assign>
<var>${lc_service_name}</var>
</assign>
<msg timestamp="20200830 16:24:15.753" level="INFO">${lc_service_name} = rascsi</msg>
<status status="PASS" starttime="20200830 16:24:15.752" endtime="20200830 16:24:15.753"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>systemctl restart ${lc_service_name}</arg>
<arg>sudo=True</arg>
<arg>sudo_password=${Rascsi_Password}</arg>
</arguments>
<msg timestamp="20200830 16:24:15.754" level="INFO">Executing command 'sudo systemctl restart rascsi'.</msg>
<msg timestamp="20200830 16:24:16.187" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" starttime="20200830 16:24:15.753" endtime="20200830 16:24:16.187"></status>
</kw>
<status status="PASS" starttime="20200830 16:24:15.751" endtime="20200830 16:24:16.187"></status>
</kw>
<kw name="Then the Rascsi Service should be Running" library="linux_services">
<kw name="Convert To Lower Case" library="String">
<doc>Converts string to lower case.</doc>
<arguments>
<arg>${service_name}</arg>
</arguments>
<assign>
<var>${lc_service_name}</var>
</assign>
<msg timestamp="20200830 16:24:16.190" level="INFO">${lc_service_name} = rascsi</msg>
<status status="PASS" starttime="20200830 16:24:16.189" endtime="20200830 16:24:16.190"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>systemctl status ${lc_service_name}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20200830 16:24:16.191" level="INFO">Executing command 'systemctl status rascsi'.</msg>
<msg timestamp="20200830 16:24:16.286" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20200830 16:24:16.287" level="INFO">${output} = ● rascsi.service - RaSCSI service
   Loaded: loaded (/etc/systemd/system/rascsi.service; enabled; vendor preset: enabled)
   Active: active (running) since Sun 2020-08-30 16:24:16 CDT; 199ms ago
 Main...</msg>
<status status="PASS" starttime="20200830 16:24:16.190" endtime="20200830 16:24:16.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Active: active (running)</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20200830 16:24:16.287" endtime="20200830 16:24:16.288"></status>
</kw>
<status status="PASS" starttime="20200830 16:24:16.188" endtime="20200830 16:24:16.288"></status>
</kw>
<kw name="Close All Connections" library="SSHLibrary" type="teardown">
<doc>Closes all open connections.</doc>
<status status="PASS" starttime="20200830 16:24:16.289" endtime="20200830 16:24:16.289"></status>
</kw>
<doc>Start the Rascsi service and make sure it stays running</doc>
<status status="PASS" starttime="20200830 16:24:13.208" endtime="20200830 16:24:16.289" critical="yes"></status>
</test>
<doc>Example using the space separated format.</doc>
<status status="PASS" starttime="20200830 16:24:08.047" endtime="20200830 16:24:16.291"></status>
</suite>
<statistics>
<total>
<stat pass="3" fail="0">Critical Tests</stat>
<stat pass="3" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="3" fail="0" id="s1" name="Rascsi Service">Rascsi Service</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
